{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/inspection-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AddEditInspectionComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_input_4_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.inspectionTypeId = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspectionTypeId);\n  }\n}\n\nfunction AddEditInspectionComponent_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r8.inspectionName);\n  }\n}\n\nfunction AddEditInspectionComponent_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_select_5_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.inspectionTypeId = $event);\n    });\n    i0.ɵɵtemplate(1, AddEditInspectionComponent_select_5_option_1_Template, 2, 2, \"option\", 6);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.inspectionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r1.inspectionTypesList$));\n  }\n}\n\nfunction AddEditInspectionComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r11.statusOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r11.statusOption);\n  }\n}\n\nfunction AddEditInspectionComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddEditInspectionComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addInspection());\n    });\n    i0.ɵɵtext(1, \" Add \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditInspectionComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddEditInspectionComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.updateInspection());\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AddEditInspectionComponent {\n  constructor(service) {\n    this.service = service;\n    this.id = 0;\n    this.status = \"\";\n    this.comments = \"\";\n  }\n\n  ngOnInit() {\n    this.id = this.inspection.id;\n    this.status = this.inspection.status;\n    this.comments = this.inspection.comments;\n    this.inspectionTypeId = this.inspection.inspectionTypeId;\n    this.statusList$ = this.service.getStatusList();\n    this.inspectionList$ = this.service.getInspectionTypesList();\n    this.inspectionTypesList$ = this.service.getInspectionTypesList();\n  }\n\n  addInspection() {\n    var inspection = {\n      status: this.status,\n      comments: this.comments,\n      inspectionTypeId: this.inspectionTypeId\n    };\n    this.service.addInspection(inspection).subscribe(res => {\n      var closeModalBtn = document.getElementById('add-edit-modal-close');\n\n      if (closeModalBtn) {\n        closeModalBtn.click();\n      }\n\n      var showAddSuccess = document.getElementById('add-success-alert');\n\n      if (showAddSuccess) {\n        showAddSuccess.style.display = \"block\";\n      }\n\n      setTimeout(function () {\n        if (showAddSuccess) {\n          showAddSuccess.style.display = \"none\";\n        }\n      }, 4000);\n    });\n  }\n\n  updateInspection() {\n    var inspection = {\n      id: this.id,\n      status: this.status,\n      comments: this.comments,\n      inspectionTypeId: this.inspectionTypeId\n    };\n    var id = this.id;\n    this.service.updateInspection(id, inspection).subscribe(res => {\n      var closeModalBtn = document.getElementById('add-edit-modal-close');\n\n      if (closeModalBtn) {\n        closeModalBtn.click();\n      }\n\n      var showUpdateSuccess = document.getElementById('update-success-alert');\n\n      if (showUpdateSuccess) {\n        showUpdateSuccess.style.display = \"block\";\n      }\n\n      setTimeout(function () {\n        if (showUpdateSuccess) {\n          showUpdateSuccess.style.display = \"none\";\n        }\n      }, 4000);\n    });\n  }\n\n}\n\nAddEditInspectionComponent.ɵfac = function AddEditInspectionComponent_Factory(t) {\n  return new (t || AddEditInspectionComponent)(i0.ɵɵdirectiveInject(i1.InspectionApiService));\n};\n\nAddEditInspectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditInspectionComponent,\n  selectors: [[\"app-add-edit-inspection\"]],\n  inputs: {\n    inspection: \"inspection\"\n  },\n  decls: 18,\n  vars: 9,\n  consts: [[1, \"mb-3\"], [\"for\", \"inspectionTypeId\", 1, \"form-label\"], [\"type\", \"text\", \"class\", \"form-control\", \"name\", \"inspectionTypeId\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"form-control\", \"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"for\", \"stauts\", 1, \"form-label\"], [\"name\", \"status\", \"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"comments\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"comments\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"inspectionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AddEditInspectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AddEditInspectionComponent_input_4_Template, 1, 1, \"input\", 2);\n      i0.ɵɵtemplate(5, AddEditInspectionComponent_select_5_Template, 3, 4, \"select\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.status = $event;\n      });\n      i0.ɵɵtemplate(10, AddEditInspectionComponent_option_10_Template, 2, 2, \"option\", 6);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.comments = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, AddEditInspectionComponent_button_16_Template, 2, 0, \"button\", 9);\n      i0.ɵɵtemplate(17, AddEditInspectionComponent_button_17_Template, 2, 0, \"button\", 9);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspection.id != 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspection.id == 0);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.status);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 7, ctx.statusList$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.comments);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspection.id == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspection.id != 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZWRpdC1pbnNwZWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AddEditInspectionComponent","constructor","service","ngOnInit","id","inspection","status","comments","inspectionTypeId","statusList$","getStatusList","inspectionList$","getInspectionTypesList","inspectionTypesList$","addInspection","subscribe","res","closeModalBtn","document","getElementById","click","showAddSuccess","style","display","setTimeout","updateInspection","showUpdateSuccess","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\sseba\\angular-inspection-api\\src\\app\\inspection\\add-edit-inspection\\add-edit-inspection.component.html","C:\\Users\\sseba\\angular-inspection-api\\src\\app\\inspection\\add-edit-inspection\\add-edit-inspection.component.ts"],"sourcesContent":["<form>\n    <div class=\"mb-3\">\n        <label for=\"inspectionTypeId\" class=\"form-label\">Inspection Type</label>\n       <input type=\"text\" class=\"form-control\" name=\"inspectionTypeId\" [(ngModel)]=\"inspectionTypeId\" *ngIf=\"inspection.id!=0\" >\n       <select class=\"form-control\" name=\"inspectionTypeId\" id=\"inspectionTypeId\" [(ngModel)]=\"inspectionTypeId\" *ngIf=\"inspection.id==0\">\n        <option *ngFor=\"let type of inspectionTypesList$|async\" [value]=\"type.id\">{{type.inspectionName}}</option>\n       </select>\n    </div>\n    <div class=\"mb-3\"> \n        <label for=\"stauts\" class=\"form-label\">Status</label>\n        <select class=\"form-control\" name=\"status\" id=\"status\" [(ngModel)]=\"status\">\n            <option *ngFor=\"let status of statusList$|async\" [value]=\"status.statusOption\">{{status.statusOption}}</option>\n        </select>\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"comments\" class=\"form-label\">Comments</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"comments\" name=\"comments\"> \n    </div>\n    <button (click)=\"addInspection()\" *ngIf=\"inspection.id==0\" class=\"btn btn-primary\">\n        Add\n    </button>\n    <button (click)=\"updateInspection()\" *ngIf=\"inspection.id!=0\" class=\"btn btn-primary\">\n        Update\n    </button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspectionApiService } from 'src/app/inspection-api.service';\n@Component({\n  selector: 'app-add-edit-inspection',\n  templateUrl: './add-edit-inspection.component.html',\n  styleUrls: ['./add-edit-inspection.component.css']\n})\nexport class AddEditInspectionComponent implements OnInit {\n  inspectionList$!:Observable<any[]>;\n  statusList$!:Observable<any[]>;\n  inspectionTypesList$!:Observable<any[]>;\n\n  constructor(private service:InspectionApiService) { }\n\n \n  @Input() inspection:any;\n  id: number = 0;\n  status: string = \"\";\n  comments: string = \"\";\n  inspectionTypeId!: number;\n\n  ngOnInit(): void {\n    this.id = this.inspection.id;\n    this.status = this.inspection.status;\n    this.comments = this.inspection.comments;\n    this.inspectionTypeId = this.inspection.inspectionTypeId;\n    this.statusList$ = this.service.getStatusList();\n    this.inspectionList$ = this.service.getInspectionTypesList();\n    this.inspectionTypesList$ = this.service.getInspectionTypesList();\n  }\n\n  addInspection()\n  {\n    var inspection = {\n      status:this.status,\n      comments:this.comments,\n      inspectionTypeId:this.inspectionTypeId\n    }\n    this.service.addInspection(inspection).subscribe(res =>{\n      var closeModalBtn = document.getElementById('add-edit-modal-close');\n      if(closeModalBtn){\n        closeModalBtn.click();\n      }\n\n      var showAddSuccess = document.getElementById('add-success-alert');\n      if(showAddSuccess){\n        showAddSuccess.style.display=\"block\";\n      }\n      setTimeout(function(){\n        if(showAddSuccess){\n          showAddSuccess.style.display=\"none\"\n        }\n      }, 4000);\n    })\n  }\n\n  updateInspection()\n  {\n    var inspection = {\n      id:this.id,\n      status:this.status,\n      comments:this.comments,\n      inspectionTypeId:this.inspectionTypeId\n    }\n    var id:number = this.id;\n    this.service.updateInspection(id, inspection).subscribe(res =>{\n      var closeModalBtn = document.getElementById('add-edit-modal-close');\n      if(closeModalBtn){\n        closeModalBtn.click();\n      }\n\n      var showUpdateSuccess = document.getElementById('update-success-alert');\n      if(showUpdateSuccess){\n        showUpdateSuccess.style.display=\"block\";\n      }\n      setTimeout(function(){\n        if(showUpdateSuccess){\n          showUpdateSuccess.style.display=\"none\"\n        }\n      }, 4000);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}