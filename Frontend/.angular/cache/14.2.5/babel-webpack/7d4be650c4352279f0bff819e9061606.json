{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/inspection-api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../add-edit-inspection/add-edit-inspection.component\";\n\nfunction ShowInspectionComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.inspectionTypesMap.get(item_r2.inspectionTypeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.comments);\n  }\n}\n\nfunction ShowInspectionComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", type_r3.id, \" - \", type_r3.inspectionName, \"\");\n  }\n}\n\nexport class ShowInspectionComponent {\n  constructor(service) {\n    this.service = service;\n    this.inspectionTypesList = []; //Map to display data associate with foreign keys\n\n    this.inspectionTypesMap = new Map(); //Variables(properties)\n\n    this.modalTitle = '';\n    this.activateAddEditInspectionComponent = false;\n  }\n\n  ngOnInit() {\n    this.inspectionList$ = this.service.getInspectionList();\n    this.inspectionTypesList$ = this.service.getInspectionTypesList();\n    this.refreshInspectionTypesMap();\n  }\n\n  modalAdd() {\n    this.inspection = {\n      id: 0,\n      status: null,\n      comments: null,\n      inspectionTypeId: null\n    };\n    this.modalTitle = \"Add Inspection\";\n  }\n\n  refreshInspectionTypesMap() {\n    this.service.getInspectionTypesList().subscribe(data => {\n      this.inspectionTypesList = data;\n\n      for (let i = 0; i < data.length; i++) {\n        this.inspectionTypesMap.set(this.inspectionTypesList[i].id, this.inspectionTypesList[i].inspectionName);\n      }\n    });\n  }\n\n}\n\nShowInspectionComponent.ɵfac = function ShowInspectionComponent_Factory(t) {\n  return new (t || ShowInspectionComponent)(i0.ɵɵdirectiveInject(i1.InspectionApiService));\n};\n\nShowInspectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowInspectionComponent,\n  selectors: [[\"app-show-inspection\"]],\n  decls: 36,\n  vars: 7,\n  consts: [[\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-primary\", \"float-end\", \"m-2\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-secondary\", \"float-end\", \"m-2\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\"]],\n  template: function ShowInspectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ShowInspectionComponent_Template_button_click_0_listener() {\n        return ctx.modalAdd();\n      });\n      i0.ɵɵtext(1, \" Add Inspection \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵtext(3, \" Show Inspection Types \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"th\");\n      i0.ɵɵtext(7, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Comments\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ShowInspectionComponent_tr_15_Template, 9, 4, \"tr\", 3);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5)(19, \"div\", 6)(20, \"div\", 7)(21, \"h5\", 8);\n      i0.ɵɵtext(22, \"Inspection Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 10);\n      i0.ɵɵtemplate(25, ShowInspectionComponent_p_25_Template, 2, 2, \"p\", 3);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"div\", 11)(28, \"div\", 5)(29, \"div\", 6)(30, \"div\", 7)(31, \"h5\", 12);\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 10);\n      i0.ɵɵelement(35, \"app-add-edit-inspection\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 3, ctx.inspectionList$));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(26, 5, ctx.inspectionTypesList$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.modalTitle);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.AddEditInspectionComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LWluc3BlY3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAqBQA,2BAA+C,CAA/C,EAA+C,IAA/C;IACQA;IAAWA;IACfA;IAAIA;IAAiDA;IAErDA;IAAIA;IAAeA;IACnBA;IAAIA;IAAiBA;;;;;;IAJjBA;IAAAA;IACAA;IAAAA;IAEAA;IAAAA;IACAA;IAAAA;;;;;;IAiBNA;IAAmDA;IAAqCA;;;;;IAArCA;IAAAA;;;;ACjC7D,OAAM,MAAOC,uBAAP,CAA8B;EASlCC,YAAoBC,OAApB,EAAgD;IAA5B;IALpB,2BAAwB,EAAxB,CAKgD,CAHhD;;IACA,0BAAyC,IAAIC,GAAJ,EAAzC,CAEgD,CAQhD;;IACA,kBAAoB,EAApB;IACA,0CAA6C,KAA7C;EAVqD;;EAErDC,QAAQ;IACN,KAAKC,eAAL,GAAuB,KAAKH,OAAL,CAAaI,iBAAb,EAAvB;IACA,KAAKC,oBAAL,GAA4B,KAAKL,OAAL,CAAaM,sBAAb,EAA5B;IACA,KAAKC,yBAAL;EACD;;EAODC,QAAQ;IAEN,KAAKC,UAAL,GAAiB;MACfC,EAAE,EAAC,CADY;MAEfC,MAAM,EAAC,IAFQ;MAGfC,QAAQ,EAAC,IAHM;MAIfC,gBAAgB,EAAC;IAJF,CAAjB;IAMA,KAAKC,UAAL,GAAkB,gBAAlB;EACD;;EACDP,yBAAyB;IAEvB,KAAKP,OAAL,CAAaM,sBAAb,GAAsCS,SAAtC,CAAgDC,IAAI,IAAG;MACrD,KAAKC,mBAAL,GAA2BD,IAA3B;;MAEA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EACA;QACE,KAAKE,kBAAL,CAAwBC,GAAxB,CAA4B,KAAKJ,mBAAL,CAAyBC,CAAzB,EAA4BR,EAAxD,EAA4D,KAAKO,mBAAL,CAAyBC,CAAzB,EAA4BI,cAAxF;MACD;IACF,CAPD;EAQD;;AA1CiC;;;mBAAvBxB,yBAAuBD;AAAA;;;QAAvBC;EAAuByB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRnC9B;MAAoHA;QAAA,OAAS+B,cAAT;MAAmB,CAAnB;MAEjH/B;MACFA;MAGFA;MACIA;MACFA;MAEFA,iCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC;MAEYA;MAAEA;MACNA;MAAIA;MAAeA;MACnBA;MAAIA;MAAMA;MACVA;MAAIA;MAAQA;MAGhBA;MACIA;;MAOJA;MAOFA,gCAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,KAA/G,EAA+G,CAA/G,EAA+G,EAA/G,EAA+G,IAA/G,EAA+G,CAA/G;MAIuDA;MAAgBA;MAC/DA;MACFA;MACAA;MACEA;;MACFA;MASNA,iCAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,KAAtK,EAAsK,CAAtK,EAAsK,EAAtK,EAAsK,IAAtK,EAAsK,EAAtK;MAIyDA;MAAcA;MAC/DA;MACFA;MACAA;MACEA;MACFA;;;;MAzCqBA;MAAAA;MAsBCA;MAAAA;MAc6BA;MAAAA","names":["i0","ShowInspectionComponent","constructor","service","Map","ngOnInit","inspectionList$","getInspectionList","inspectionTypesList$","getInspectionTypesList","refreshInspectionTypesMap","modalAdd","inspection","id","status","comments","inspectionTypeId","modalTitle","subscribe","data","inspectionTypesList","i","length","inspectionTypesMap","set","inspectionName","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sseba\\angular-inspection-api\\src\\app\\inspection\\show-inspection\\show-inspection.component.html","C:\\Users\\sseba\\angular-inspection-api\\src\\app\\inspection\\show-inspection\\show-inspection.component.ts"],"sourcesContent":["\n <!-- Add inspection trigger modal -->\n <button type=\"button\" class=\"btn btn-primary float-end m-2\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" (click)=\"modalAdd()\">\n    \n    Add Inspection\n  </button>\n\n<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-secondary float-end m-2\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n    Show Inspection Types\n  </button>\n\n<table class=\"table table-striped\">\n    <thead>\n        <th>Id</th>\n        <th>Inspection Type</th>\n        <th>Status</th>\n        <th>Comments</th>\n\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of inspectionList$|async\">\n            <td>{{item.id}}</td>\n            <td>{{inspectionTypesMap.get(item.inspectionTypeId)}}</td>\n            <!--<td>{{item.inspectionTypeId}}</td> -->\n            <td>{{item.status}}</td>\n            <td>{{item.comments}}</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n  \n  <!-- Show inspection Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Inspection Types</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <p *ngFor=\"let type of inspectionTypesList$|async\">{{type.id}} - {{type.inspectionName}}</p>\n        </div>\n       \n      </div>\n    </div>\n  </div>\n\n \n  \n  <!-- Add new inspection Modal -->\n  <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{{modalTitle}}</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <app-add-edit-inspection></app-add-edit-inspection>\n        </div>\n       \n      </div>\n    </div>\n  </div>","import { NonNullAssert } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InspectionApiService } from 'src/app/inspection-api.service'; \n\n@Component({\n  selector: 'app-show-inspection',\n  templateUrl: './show-inspection.component.html',\n  styleUrls: ['./show-inspection.component.css']\n})\nexport class ShowInspectionComponent implements OnInit {\n\n  inspectionList$!:Observable<any[]>;\n  inspectionTypesList$!:Observable<any[]>;\n  inspectionTypesList:any=[];\n\n  //Map to display data associate with foreign keys\n  inspectionTypesMap:Map<number, string> = new Map()\n\n  constructor(private service:InspectionApiService) { }\n\n  ngOnInit(): void {\n    this.inspectionList$ = this.service.getInspectionList();\n    this.inspectionTypesList$ = this.service.getInspectionTypesList();\n    this.refreshInspectionTypesMap();\n  }\n\n  //Variables(properties)\n  modalTitle:string = '';\n  activateAddEditInspectionComponent:boolean = false;\n  inspection:any;\n\n  modalAdd()\n  {\n    this.inspection ={\n      id:0;\n      status:null;\n      comments:null;\n      inspectionTypeId:null;\n    }\n    this.modalTitle = \"Add Inspection\"\n  }\n  refreshInspectionTypesMap()\n  {\n    this.service.getInspectionTypesList().subscribe(data =>{\n      this.inspectionTypesList = data;\n\n      for(let i = 0; i < data.length; i++)\n      {\n        this.inspectionTypesMap.set(this.inspectionTypesList[i].id, this.inspectionTypesList[i].inspectionName);\n      }\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}